% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_mixedModel.R
\name{stat_mixedModel}
\alias{stat_mixedModel}
\title{Add results linear mixed model to plot}
\usage{
stat_mixedModel(
  mapping = NULL,
  data = NULL,
  geom = GeomStat,
  position = "identity",
  na.rm = FALSE,
  show.legend = NA,
  size = 10,
  hide.ns = TRUE,
  tick.length = 0.02,
  format.fun = pvalue,
  vjust = 0,
  step.increase = 0.05,
  colour = "black",
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{geom}{the geometric object to use display the data. Set to \code{GeomStat} and usually no need to change.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{size}{Fontsize for the annotation}

\item{hide.ns}{Should p-values lower than 0.05 be removed? Default TRUE}

\item{tick.length}{Length of the ticks in the p-value brackets. Default 0.02}

\item{format.fun}{A function used to format the p value. Default \code{scales::pvalue}}

\item{vjust}{A numeric vector specifying vertical justification. Passed on to textGrob.}

\item{step.increase}{Amount of increase between two brackets. Default 0.05}

\item{colour}{Colour of the bracket and label}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{...}{Further arguments passed on to the layer in params}
}
\value{
A ggplot layer
}
\description{
Uses \code{\link[lme4:lmer]{lme4::lmer()}} and \code{\link[emmeans:emmeans]{emmeans::emmeans()}} to calcuate significanes.
First a mixed model is build with \code{lmer} using \code{y ~ x + (1|group)}.
In a second step, significanes are calcuated using \code{pairs(emmeans(model ~ x))}.
Only works if the x-axis is a discrete scale.
}
\examples{
library(ggplot2)
library(ggsimplestats)

theme_set(ggthemes::theme_few())

df <- data.frame(patient=as.factor(rep(1:5, each=4)),
                 drug=as.factor(rep(1:4, times=5)),
                 response=c(30, 28, 16, 34,
                            14, 18, 10, 22,
                            24, 20, 18, 30,
                            38, 34, 20, 44,
                            26, 28, 14, 30))
ggplot(df, aes(x=drug, y=response, color=patient)) +
  geom_point(position = position_dodge(width = .2)) +
  stat_mixedModel(aes(group = patient))
}
